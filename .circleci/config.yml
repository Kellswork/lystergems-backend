version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:10.16.0
        environment:
           PGHOST: localhost
           PGUSER: postgres
           NODE_ENV: testing
           DIALECT: postgres
           TEST_URL: process.env.TEST_URL

      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: shopping_site_test
          DIALECT: postgres
          POSTGRES_PASSWORD: process.env.POSTGRES_PASSWORD

    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@6'
    
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}

      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - run:
          name: install dependencies
          command: npm install
      
      - run:
          name: Waiting for PostgreSQL to start
          command:  dockerize -wait tcp://localhost:5432 -timeout 1m
  
      - run: sudo apt-get update
      - run: sudo apt install -y postgresql-client || true

      - run: 
          name: Set up DB
          command: |
            psql -h localhost -p 5432 -c 'drop database if exists shopping_site_test;' -U postgres
            psql -h localhost -p 5432 -c 'create database shopping_site_test;' -U postgres
            psql -h localhost -p 5432 -c "CREATE USER lambda WITH PASSWORD 'kissme22';" -U postgres

      - run:
          name: run migrations
          command: npm run rollback-test && npm run latest-test
      
      - run:
          name: run tests
          command: npm test

      # - run:
      #     name: code-coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
